# PowerShell Module Build Pipeline
# https://aka.ms/yaml

parameters:
- name: moduleName
  type: string
  default:
- name: moduleVersion
  type: string
  default:
- name: packages
  type: object
  default:
  - id: Microsoft.IdentityModel.Clients.ActiveDirectory
    version: 5.2.7
    targetFramework: [net45]

steps:
- task: CopyFiles@2
  displayName: 'Copy Source to Staging'
  inputs:
    SourceFolder: './src'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/${{ parameters.moduleName }}'
    preserveTimestamp: true

- task: CopyFiles@2
  displayName: 'Copy LICENSE to Staging'
  inputs:
    Contents: 'LICENSE'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/${{ parameters.moduleName }}'
    preserveTimestamp: true

- pwsh: 'Rename-Item "$env:StagingDirectory/$env:ModuleName/LICENSE" -NewName "License.txt"'
  displayName: 'Stage License.txt'
  env:
    StagingDirectory: '$(Build.ArtifactStagingDirectory)'
    ModuleName: '${{ parameters.moduleName }}'

- task: NuGetCommand@2
  displayName: 'Restore NuGet Packages'
  inputs:
    command: 'restore'
    restoreSolution: './packages.config'
    feedsToUse: 'config'
    nugetConfigPath: './NuGet.config'
    restoreDirectory: './packages'

- ${{ each package in parameters.packages }}:
  - ${{ each targetFramework in package.targetFramework }}:
    - task: CopyFiles@2
      displayName: 'Copy ${{ package.id }}.${{ package.version }} ${{ targetFramework }} to Staging'
      inputs:
        SourceFolder: './packages/${{ package.id }}.${{ package.version }}/lib/${{ targetFramework }}'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/${{ parameters.moduleName }}/${{ package.id }}.${{ package.version }}/${{ targetFramework }}'
        preserveTimestamp: true

- task: PowerShell@2
  displayName: 'Update PowerShell Module Manifest'
  inputs:
    filePath: './build/Update-PSModuleManifest.ps1'
    arguments: '-ModuleManifestPath "$(Build.ArtifactStagingDirectory)/${{ parameters.moduleName }}/${{ parameters.moduleName }}.psd1" -ModuleVersion "${{ variables.moduleVersion }}"'
    pwsh: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish PowerShell Module Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'PowerShell Module'
    publishLocation: 'Container'

- task: ArchiveFiles@2
  displayName: 'Package PowerShell Module'
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/${{ parameters.moduleName }}'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/${{ parameters.moduleName }}_${{ variables.moduleVersion }}.zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish PowerShell Module Package Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/${{ parameters.moduleName }}_${{ variables.moduleVersion }}.zip'
    ArtifactName: 'PowerShell Module Package'
    publishLocation: 'Container'
