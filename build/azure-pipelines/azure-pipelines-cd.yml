# Continuous Delivery Pipeline
# https://aka.ms/yaml

resources:        # types: pipelines | builds | repositories | containers | packages
  pipelines:
  - pipeline: 'CI'  # identifier for the resource used in pipeline resource variables
    source: 'jasoth.ADAL.PS.CI'  # name of the pipeline that produces an artifact
    branch: master

parameters:
- name: vmImage
  displayName: 'Pool Image'
  type: string
  default: windows-latest
  values:
  - windows-latest
  - ubuntu-latest
  - macOS-latest

trigger: none
#  batch: true
#  branches:
#    include:
#    - master
#  paths:
#    include:
#    - src/*

pr: none

variables:
  moduleName: 'ADAL.PS'
  moduleVersion.MajorMinorBuild: '5.2.7' # Manually adjust the version number as needed for semantic versioning.
  moduleVersion.Revision: '$[counter(variables.moduleVersion.MajorMinorBuild, 1)]' # Revision is auto-incremented.
  moduleVersion: '$(moduleVersion.MajorMinorBuild).$(moduleVersion.Revision)'
  vmImage: '${{ parameters.vmImage }}'
  artifactName: 'PSModule'

pool:
  vmImage: $(vmImage)

stages:
- stage: Sign
  displayName: 'Code Signing'
  jobs: 
  - job: Sign
    displayName: 'Sign ${{ variables.moduleVersion }}'
    variables:
      #moduleName: '$[ dependencies.Prepare.outputs[''ModuleParameters.moduleName''] ]'
      skipComponentGovernanceDetection: true
    pool:
      vmImage: 'windows-latest'
    steps:
    - download: current
      artifact: '$(artifactName)'
    - template: template-psmodule-sign.yml
      parameters:
        moduleName: '$(moduleName)'
        pipelineId: 'CI'

- stage: Package
  displayName: 'Standalone Package'
  dependsOn: Sign
  jobs: 
  - deployment: Package
    displayName: 'Package $(moduleVersion)'
    environment: Standalone
    strategy:
      runOnce:
        deploy:
          steps:
          - template: template-psmodule-package.yml
            parameters:
              moduleName: '$(moduleName)'
              moduleVersion: '$(moduleVersion)'

- stage: Test
  dependsOn: Sign
  jobs: 
  - deployment: Publish
    displayName: 'Publish $(moduleVersion)'
    environment: Test
    strategy:
      runOnce:
        deploy:
          steps:
          - template: template-psmodule-publish.yml
            parameters:
              moduleName: '$(moduleName)'
              RepositorySourceLocation: 'https://www.poshtestgallery.com/api/v2'
              NuGetApiKeySecretName: 'PSTestGallery-API-Key'

- stage: Production
  dependsOn: Sign
  jobs: 
  - deployment: Publish
    displayName: 'Publish $(moduleVersion)'
    environment: Production
    strategy:
      runOnce:
        deploy:
          steps:
          - template: template-psmodule-publish.yml
            parameters:
              moduleName: '$(moduleName)'
              RepositorySourceLocation: 'https://www.poshtestgallery.com/api/v2'
              NuGetApiKeySecretName: 'PSTestGallery-API-Key'
