# Continuous Integration Pipeline
# https://aka.ms/yaml

parameters:
- name: vmImage
  displayName: 'Pool Image'
  type: string
  default: 'windows-latest'
  values:
  - windows-latest
  - ubuntu-latest
  - macOS-latest

trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    include:
    - src/*

pr: none

variables:
  moduleName: 'ADAL.PS'
  #moduleVersion.Revision: '$[counter(variables.moduleVersion, 1)]' # Revision is auto-incremented.
  #moduleVersion: '$(moduleVersion).$(moduleVersion.Revision)'
  vmImage: '${{ parameters.vmImage }}'
  artifactName: 'PSModule'

pool:
  vmImage: $(vmImage)

stages:
- stage: Build
  jobs: 
  - job: Prepare
    variables:
      skipComponentGovernanceDetection: true
    steps:
    - task: PowerShell@2
      name: ModuleParameters
      displayName: 'Get Parameters for PowerShell Module'
      inputs:
        filePath: '$(System.DefaultWorkingDirectory)/build/Get-PipelineParameters.ps1'
        arguments: '-ModuleManifestPath "$(Build.SourcesDirectory)/src/*.psd1" -PackagesConfigPath "$(Build.SourcesDirectory)/packages.config"'
        pwsh: true

  - job: Build
    dependsOn: Prepare
    variables: 
      moduleName: '$[ dependencies.Prepare.outputs[''ModuleParameters.moduleName''] ]'
      #moduleVersion.Prefix: '$[ dependencies.Prepare.outputs[''ModuleParameters.moduleVersion''] ]'
      moduleVersion.Prefix: '$[ dependencies.Prepare.outputs[''ModuleParameters.version.Microsoft.IdentityModel.Clients.ActiveDirectory''] ]'
      moduleVersion.Revision: '$[ counter(variables[''moduleVersion.Prefix''], 1) ]'
      moduleVersionFull: '$[ format(''{0}.{1}'', variables[''moduleVersion.Prefix''], variables[''moduleVersion.Revision'']) ]'
      moduleVersion: '$[ coalesce(variables[''moduleVersionFull''], variables[''moduleVersion.Prefix''], '''') ]'
      version.Microsoft.IdentityModel.Clients.ActiveDirectory: '$[ dependencies.Prepare.outputs[''ModuleParameters.version.Microsoft.IdentityModel.Clients.ActiveDirectory''] ]'
    steps:
    - template: template-psmodule-build.yml
      parameters:
        moduleName: '$(moduleName)'
        moduleVersion: '$(moduleVersion)'
        packages:
        - id: Microsoft.IdentityModel.Clients.ActiveDirectory
          version: '$(version.Microsoft.IdentityModel.Clients.ActiveDirectory)'
          targetFramework: [net45]

  - job: Sign
    dependsOn:
    - Prepare
    - Build
    variables:
      moduleName: '$[ dependencies.Prepare.outputs[''ModuleParameters.moduleName''] ]'
      skipComponentGovernanceDetection: true
    pool:
      vmImage: 'windows-latest'
    steps:
    - download: current
      artifact: '$(artifactName)'
    - template: template-psmodule-sign.yml
      parameters:
        moduleName: '$(moduleName)'

- stage: Test
  dependsOn: Build
  jobs: 
  - job: Test
    steps:
    - script: 'echo test'
