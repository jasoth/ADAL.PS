# Continuous Integration Pipeline
# https://aka.ms/yaml

parameters:
- name: vmImage
  displayName: 'Pool Image'
  type: string
  default: windows-latest
  values:
  - windows-latest
  - ubuntu-latest
  - macOS-latest

trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    include:
    - src/*

pr: none

variables:
  moduleVersion.MajorMinorBuild: '5.2.7' # Manually adjust the version number as needed for semantic versioning.
  moduleVersion.Revision: '$[counter(variables.moduleVersion.MajorMinorBuild, 1)]' # Revision is auto-incremented.
  moduleVersion: '$(moduleVersion.MajorMinorBuild).$(moduleVersion.Revision)'
  vmImage: '${{ parameters.vmImage }}'

pool:
  vmImage: $(vmImage)

stages:
- stage: Build
  jobs: 
  - job: BuildProcess
    steps:
    - template: template-psmodule-build.yml
      parameters:
        moduleName: 'ADAL.PS'
        moduleVersion: '$(moduleVersion)'
        packages:
        - id: Microsoft.IdentityModel.Clients.ActiveDirectory
          version: 5.2.7
          targetFramework: [net45]
  - job: SignProcess
    dependsOn: BuildProcess
    pool:
      vmImage: 'windows-latest'
    steps:
    - template: template-psmodule-sign.yml
      parameters:
        moduleName: 'ADAL.PS'

- stage: Package
  dependsOn: Build
  jobs: 
  - deployment: SignProcess
    environment: Standalone
    pool:
      vmImage: 'windows-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - template: template-psmodule-sign.yml
            parameters:
              moduleName: 'ADAL.PS'

#- stage: Package
#  jobs: 
#  - job: PackageProcess
#    dependsOn: BuildProcess
#    steps:
#    - template: template-psmodule-package.yml
#      parameters:
#        moduleName: 'ADAL.PS'
#        moduleVersion: '$(moduleVersion)'

  - deployment: PackageProcess
    dependsOn: SignProcess
    environment: Standalone
    strategy:
      runOnce:
        deploy:
          steps:
          - template: template-psmodule-package.yml
            parameters:
              moduleName: 'ADAL.PS'
              moduleVersion: '$(moduleVersion)'
